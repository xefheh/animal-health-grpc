// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: Protos/report.proto
// </auto-generated>
#pragma warning disable 0414, 1591, 8981, 0612
#region Designer generated code

using grpc = global::Grpc.Core;

namespace AnimalHealth.Application.Models {
  public static partial class ReportProto
  {
    static readonly string __ServiceName = "ReportProto";

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static void __Helper_SerializeMessage(global::Google.Protobuf.IMessage message, grpc::SerializationContext context)
    {
      #if !GRPC_DISABLE_PROTOBUF_BUFFER_SERIALIZATION
      if (message is global::Google.Protobuf.IBufferMessage)
      {
        context.SetPayloadLength(message.CalculateSize());
        global::Google.Protobuf.MessageExtensions.WriteTo(message, context.GetBufferWriter());
        context.Complete();
        return;
      }
      #endif
      context.Complete(global::Google.Protobuf.MessageExtensions.ToByteArray(message));
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static class __Helper_MessageCache<T>
    {
      public static readonly bool IsBufferMessage = global::System.Reflection.IntrospectionExtensions.GetTypeInfo(typeof(global::Google.Protobuf.IBufferMessage)).IsAssignableFrom(typeof(T));
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static T __Helper_DeserializeMessage<T>(grpc::DeserializationContext context, global::Google.Protobuf.MessageParser<T> parser) where T : global::Google.Protobuf.IMessage<T>
    {
      #if !GRPC_DISABLE_PROTOBUF_BUFFER_SERIALIZATION
      if (__Helper_MessageCache<T>.IsBufferMessage)
      {
        return parser.ParseFrom(context.PayloadAsReadOnlySequence());
      }
      #endif
      return parser.ParseFrom(context.PayloadAsNewBuffer());
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::AnimalHealth.Application.Models.ReportLookup> __Marshaller_ReportLookup = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::AnimalHealth.Application.Models.ReportLookup.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::AnimalHealth.Application.Models.ReportModel> __Marshaller_ReportModel = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::AnimalHealth.Application.Models.ReportModel.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::AnimalHealth.Application.Models.UserModel> __Marshaller_UserModel = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::AnimalHealth.Application.Models.UserModel.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::AnimalHealth.Application.Models.ReportModelList> __Marshaller_ReportModelList = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::AnimalHealth.Application.Models.ReportModelList.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::AnimalHealth.Application.Models.DatesPeriod> __Marshaller_DatesPeriod = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::AnimalHealth.Application.Models.DatesPeriod.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::AnimalHealth.Application.Models.ChangeReportState> __Marshaller_ChangeReportState = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::AnimalHealth.Application.Models.ChangeReportState.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Protobuf.WellKnownTypes.Empty> __Marshaller_google_protobuf_Empty = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Protobuf.WellKnownTypes.Empty.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::AnimalHealth.Application.Models.ReportMetaData> __Marshaller_ReportMetaData = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::AnimalHealth.Application.Models.ReportMetaData.Parser));

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::AnimalHealth.Application.Models.ReportLookup, global::AnimalHealth.Application.Models.ReportModel> __Method_GetReport = new grpc::Method<global::AnimalHealth.Application.Models.ReportLookup, global::AnimalHealth.Application.Models.ReportModel>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetReport",
        __Marshaller_ReportLookup,
        __Marshaller_ReportModel);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::AnimalHealth.Application.Models.ReportLookup, global::AnimalHealth.Application.Models.ReportLookup> __Method_DeleteReport = new grpc::Method<global::AnimalHealth.Application.Models.ReportLookup, global::AnimalHealth.Application.Models.ReportLookup>(
        grpc::MethodType.Unary,
        __ServiceName,
        "DeleteReport",
        __Marshaller_ReportLookup,
        __Marshaller_ReportLookup);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::AnimalHealth.Application.Models.UserModel, global::AnimalHealth.Application.Models.ReportModelList> __Method_GetReportsByUser = new grpc::Method<global::AnimalHealth.Application.Models.UserModel, global::AnimalHealth.Application.Models.ReportModelList>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetReportsByUser",
        __Marshaller_UserModel,
        __Marshaller_ReportModelList);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::AnimalHealth.Application.Models.DatesPeriod, global::AnimalHealth.Application.Models.ReportModelList> __Method_GetReportsByPeriod = new grpc::Method<global::AnimalHealth.Application.Models.DatesPeriod, global::AnimalHealth.Application.Models.ReportModelList>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetReportsByPeriod",
        __Marshaller_DatesPeriod,
        __Marshaller_ReportModelList);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::AnimalHealth.Application.Models.ChangeReportState, global::AnimalHealth.Application.Models.ReportLookup> __Method_ApproveReport = new grpc::Method<global::AnimalHealth.Application.Models.ChangeReportState, global::AnimalHealth.Application.Models.ReportLookup>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ApproveReport",
        __Marshaller_ChangeReportState,
        __Marshaller_ReportLookup);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::AnimalHealth.Application.Models.ChangeReportState, global::AnimalHealth.Application.Models.ReportLookup> __Method_SendReport = new grpc::Method<global::AnimalHealth.Application.Models.ChangeReportState, global::AnimalHealth.Application.Models.ReportLookup>(
        grpc::MethodType.Unary,
        __ServiceName,
        "SendReport",
        __Marshaller_ChangeReportState,
        __Marshaller_ReportLookup);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::AnimalHealth.Application.Models.ChangeReportState, global::AnimalHealth.Application.Models.ReportLookup> __Method_CancelReport = new grpc::Method<global::AnimalHealth.Application.Models.ChangeReportState, global::AnimalHealth.Application.Models.ReportLookup>(
        grpc::MethodType.Unary,
        __ServiceName,
        "CancelReport",
        __Marshaller_ChangeReportState,
        __Marshaller_ReportLookup);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Protobuf.WellKnownTypes.Empty, global::AnimalHealth.Application.Models.ReportMetaData> __Method_GetReportMetaData = new grpc::Method<global::Google.Protobuf.WellKnownTypes.Empty, global::AnimalHealth.Application.Models.ReportMetaData>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetReportMetaData",
        __Marshaller_google_protobuf_Empty,
        __Marshaller_ReportMetaData);

    /// <summary>Service descriptor</summary>
    public static global::Google.Protobuf.Reflection.ServiceDescriptor Descriptor
    {
      get { return global::AnimalHealth.Application.Models.ReportReflection.Descriptor.Services[0]; }
    }

    /// <summary>Base class for server-side implementations of ReportProto</summary>
    [grpc::BindServiceMethod(typeof(ReportProto), "BindService")]
    public abstract partial class ReportProtoBase
    {
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::AnimalHealth.Application.Models.ReportModel> GetReport(global::AnimalHealth.Application.Models.ReportLookup request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::AnimalHealth.Application.Models.ReportLookup> DeleteReport(global::AnimalHealth.Application.Models.ReportLookup request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::AnimalHealth.Application.Models.ReportModelList> GetReportsByUser(global::AnimalHealth.Application.Models.UserModel request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::AnimalHealth.Application.Models.ReportModelList> GetReportsByPeriod(global::AnimalHealth.Application.Models.DatesPeriod request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::AnimalHealth.Application.Models.ReportLookup> ApproveReport(global::AnimalHealth.Application.Models.ChangeReportState request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::AnimalHealth.Application.Models.ReportLookup> SendReport(global::AnimalHealth.Application.Models.ChangeReportState request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::AnimalHealth.Application.Models.ReportLookup> CancelReport(global::AnimalHealth.Application.Models.ChangeReportState request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::AnimalHealth.Application.Models.ReportMetaData> GetReportMetaData(global::Google.Protobuf.WellKnownTypes.Empty request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

    }

    /// <summary>Creates service definition that can be registered with a server</summary>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public static grpc::ServerServiceDefinition BindService(ReportProtoBase serviceImpl)
    {
      return grpc::ServerServiceDefinition.CreateBuilder()
          .AddMethod(__Method_GetReport, serviceImpl.GetReport)
          .AddMethod(__Method_DeleteReport, serviceImpl.DeleteReport)
          .AddMethod(__Method_GetReportsByUser, serviceImpl.GetReportsByUser)
          .AddMethod(__Method_GetReportsByPeriod, serviceImpl.GetReportsByPeriod)
          .AddMethod(__Method_ApproveReport, serviceImpl.ApproveReport)
          .AddMethod(__Method_SendReport, serviceImpl.SendReport)
          .AddMethod(__Method_CancelReport, serviceImpl.CancelReport)
          .AddMethod(__Method_GetReportMetaData, serviceImpl.GetReportMetaData).Build();
    }

    /// <summary>Register service method with a service binder with or without implementation. Useful when customizing the service binding logic.
    /// Note: this method is part of an experimental API that can change or be removed without any prior notice.</summary>
    /// <param name="serviceBinder">Service methods will be bound by calling <c>AddMethod</c> on this object.</param>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public static void BindService(grpc::ServiceBinderBase serviceBinder, ReportProtoBase serviceImpl)
    {
      serviceBinder.AddMethod(__Method_GetReport, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::AnimalHealth.Application.Models.ReportLookup, global::AnimalHealth.Application.Models.ReportModel>(serviceImpl.GetReport));
      serviceBinder.AddMethod(__Method_DeleteReport, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::AnimalHealth.Application.Models.ReportLookup, global::AnimalHealth.Application.Models.ReportLookup>(serviceImpl.DeleteReport));
      serviceBinder.AddMethod(__Method_GetReportsByUser, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::AnimalHealth.Application.Models.UserModel, global::AnimalHealth.Application.Models.ReportModelList>(serviceImpl.GetReportsByUser));
      serviceBinder.AddMethod(__Method_GetReportsByPeriod, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::AnimalHealth.Application.Models.DatesPeriod, global::AnimalHealth.Application.Models.ReportModelList>(serviceImpl.GetReportsByPeriod));
      serviceBinder.AddMethod(__Method_ApproveReport, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::AnimalHealth.Application.Models.ChangeReportState, global::AnimalHealth.Application.Models.ReportLookup>(serviceImpl.ApproveReport));
      serviceBinder.AddMethod(__Method_SendReport, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::AnimalHealth.Application.Models.ChangeReportState, global::AnimalHealth.Application.Models.ReportLookup>(serviceImpl.SendReport));
      serviceBinder.AddMethod(__Method_CancelReport, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::AnimalHealth.Application.Models.ChangeReportState, global::AnimalHealth.Application.Models.ReportLookup>(serviceImpl.CancelReport));
      serviceBinder.AddMethod(__Method_GetReportMetaData, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Protobuf.WellKnownTypes.Empty, global::AnimalHealth.Application.Models.ReportMetaData>(serviceImpl.GetReportMetaData));
    }

  }
}
#endregion
